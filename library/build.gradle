apply plugin: 'com.android.library'

/**
 * Library options =================================================================================
 */
android {
    compileSdkVersion config.build.compileSdkVersion
    buildToolsVersion config.build.buildToolsVersion

    defaultConfig {
        minSdkVersion config.build.minSdkVersion
        targetSdkVersion config.build.targetSdkVersion
        consumerProguardFiles 'proguard-rules.pro'
        testInstrumentationRunner config.test.instrumentationRunner.androidJUnit
        // Enabled only for purpose of tests.
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        modules {
            matchingFallbacks = ['debug', 'release']
        }
    }

    sourceSets {
        release.java.srcDirs = [
                "${rootProject.rootDir}/library-core/src/main/java",
                "${rootProject.rootDir}/library-base/src/main/java",
                "${rootProject.rootDir}/library-common/src/main/java",
                "${rootProject.rootDir}/library-web/src/main/java",
                "${rootProject.rootDir}/library-manage-core/src/main/java",
                "${rootProject.rootDir}/library-manage-base/src/main/java",
                "${rootProject.rootDir}/library-transition-core/src/main/java",
                "${rootProject.rootDir}/library-transition-common/src/main/java",
                "${rootProject.rootDir}/library-transition-extra/src/main/java"
        ]
        debug.java.srcDirs = release.java.srcDirs
        release.res.srcDirs = [
                "${rootProject.rootDir}/library-transition-core/src/main/res",
                "${rootProject.rootDir}/library-transition-common/src/main/res",
                "${rootProject.rootDir}/library-transition-extra/src/main/res"
        ]
        debug.res.srcDirs = release.res.srcDirs
        test.java.srcDirs = [
                "${rootProject.rootDir}/library/src/test/java",
                "${rootProject.rootDir}/library-core/src/test/java",
                "${rootProject.rootDir}/library-base/src/test/java",
                "${rootProject.rootDir}/library-common/src/test/java",
                "${rootProject.rootDir}/library-web/src/test/java",
                "${rootProject.rootDir}/library-manage-core/src/test/java",
                "${rootProject.rootDir}/library-manage-base/src/test/java",
                "${rootProject.rootDir}/library-transition-core/src/test/java",
                "${rootProject.rootDir}/library-transition-common/src/test/java",
                "${rootProject.rootDir}/library-transition-extra/src/test/java"
        ]
        androidTest.java.srcDirs = [
                "${rootProject.rootDir}/library/src/androidTest/java",
                "${rootProject.rootDir}/library-core/src/androidTest/java",
                "${rootProject.rootDir}/library-base/src/androidTest/java",
                "${rootProject.rootDir}/library-common/src/androidTest/java",
                "${rootProject.rootDir}/library-web/src/androidTest/java",
                "${rootProject.rootDir}/library-manage-core/src/androidTest/java",
                "${rootProject.rootDir}/library-manage-base/src/androidTest/java",
                "${rootProject.rootDir}/library-transition-core/src/androidTest/java",
                "${rootProject.rootDir}/library-transition-common/src/androidTest/java",
                "${rootProject.rootDir}/library-transition-extra/src/androidTest/java"
        ]
        androidTest.res.srcDirs = [
                "${rootProject.rootDir}/library/src/androidTest/res",
                "${rootProject.rootDir}/library-core/src/androidTest/res",
                "${rootProject.rootDir}/library-base/src/androidTest/res",
                "${rootProject.rootDir}/library-common/src/androidTest/res",
                "${rootProject.rootDir}/library-web/src/androidTest/res",
                "${rootProject.rootDir}/library-manage-core/src/androidTest/res",
                "${rootProject.rootDir}/library-transition-core/src/androidTest/res"
        ]
    }

    compileOptions {
        sourceCompatibility config.build.sourceCompatibility
        targetCompatibility config.build.sourceCompatibility
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

/**
 * Library dependencies ============================================================================
 */
dependencies {
    // PRODUCTION ----------------------------------------------------------------------------------
    implementation deps.androidx.annotation.annotation
    implementation deps.androidx.appcompat.appcompat
    implementation deps.androidx.vectordrawable.vectordrawable
    implementation deps.universum.studios.logger

    // DEVELOPMENT ---------------------------------------------------------------------------------
    // None.

    // TEST ----------------------------------------------------------------------------------------
    // Unit test dependencies.
    testImplementation deps.test.junit
    testImplementation deps.test.mockito.core
    testImplementation deps.test.robolectric.robolectric
    testImplementation deps.androidx.test.core
    testImplementation deps.androidx.test.ext.junit
    testImplementation deps.universum.studios.testing

    // Instrumentation test dependencies.
    androidTestImplementation deps.test.junit
    androidTestImplementation deps.test.mockito.core
    androidTestImplementation deps.androidx.test.core
    androidTestImplementation deps.androidx.test.runner
    androidTestImplementation deps.androidx.test.ext.junit
    androidTestImplementation deps.universum.studios.testing
}

/**
 * Additional configuration ========================================================================
 */
apply from: 'coverage/jacoco.gradle'
apply from: 'coverage/codacy.gradle'
apply from: "${rootProject.rootDir}/deploy/deploy.gradle"